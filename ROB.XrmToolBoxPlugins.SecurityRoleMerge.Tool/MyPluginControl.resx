<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="tsbClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAAd0SU1FB+IGBRMgHykqIcUAAAAHdEVYdEF1dGhvcgCprsxIAAAADHRFWHREZXNj
        cmlwdGlvbgATCSEjAAAACnRFWHRDb3B5cmlnaHQArA/MOgAAAAl0RVh0U29mdHdhcmUAXXD/OgAAAAd0
        RVh0U291cmNlAPX/g+sAAAAIdEVYdENvbW1lbnQA9syWvwAAAAZ0RVh0VGl0bGUAqO7SJwAAAwVJREFU
        OE9dUn8s1GEY/yJfPzrunJMzdy6/OY4oNCFtrpmlGSO/TTqprajE1FCUjCgqljJTrf6Q1j8tQ0lTNqpV
        fs7q/lAqVi3aSWl9er6nu52e7fN9vu/neZ7P8z7v+zIAtCAzzvP2TifP03H/I0cuT6G4nSG38mEY9kaO
        qvNr2zXUJST00lpkmMThXFzcxQ/1jWhKSX1G8fU6njPT9j25d3+2tmOx5jx+tLShLmnXY+L1nRri41tn
        a89Bc6gYiyerUJ+Y9JJlWa0IU6pUNvy51YGF8tOYLSnDfFklNJcuoyI2tptEpDVxcbUfa+oxf/AoZrJU
        mEvOxK/KahRt3TbMNWHSFIrkvpLjS8uNzZg7egyfDhdjvrgU01W1aEhPV4+WV2DhYCFmMnPwPikdC9l5
        6NutQohEMkQC3tothjs65j4sKllephFmDxzBx/0F+FxQBA3N/CWfOqdm493ORHxLykBvZjbcRSKuu5Jg
        rD+kCLFY1VVQqPlecQaf9uVjJi0b05HRUMs3YtJBhjcSN9wMCYWMbz1IhdG6Or0ABzcry5T+wqKfc1ui
        MMmzxQRjhlHGGFNr1qIjMBgCln1AxWGGNasEjgQFVQ+FR/1+a2KJccb0n4A5Rkig28UDMWLxExKwMazR
        /5QFhzS9jlBCbW6NEYYlAXOoWQHGyA+T2KCRKXokMmRKZdw70V+x9lPqH9AyFhqJCTMehmjLw4wJJkQS
        PI3cjklHV1obo5e4++QfSdZDJXHq14kwWR4ep56HhGF4DYse0usivOLZ4KpiAxTr1r24ELBJM2UvBQ2P
        ThLoJN8vc0WK1Ik7DyGzw9l5f4ePPwbNLHCHggMWa9Hi4g4pjzdACZu9hMKMZh+/pRFbMe5RvNfMHDc9
        5fAT2IxR3Fc7gkIkKr9O5Li9A9rcPOFoxePeu1I3p69QuPeK3PeXWuqC296+cObzueIEgqk2gUO4g8OJ
        sxsC4cXncy9Mf886BAsEuTUbg5YC7OzGKZ5IMOH4VUlkyYQoQ84QZLGEGILRCgfmLx4bCEI9LN7QAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="toolStripButton_getRoles.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAj1JREFUOE+Vkt1Lk2EYxvcvBJ0FQQeB7awOOvQgGtVBTnz38eqazfKjDKU2ibVq
        RrqGhs1sL4htia6kiEam28ytfa+oFKE50y2XKc4woiANYa+72p65jdcV5AU3PNzXc/3uh5uH9y91Ghhs
        HXemuU9xeINvMWx3YccQh9NLQu0dBjC9Jpj6Lag73/R/kKfP7bh6QwexRIoTZRRarmhBSeiiMDvch49C
        Prc/7g5Ae1OP+oZzeWN7eHE1DjZow8IlCvGX1oI3G4tDf/suxNLiaTmlNn5DMyJHbGIMq9OT3HsuTwgX
        mlUwmx8QA9++IjXpy19K/fqJzdkpaB3VBPJhfoILsDy2QkzLEJmZIQY7qEeSUYM1XsNmYgHsCzPW33sJ
        4NmSEbVMOd5FQgVIN3Mf5ZQk3/Ac3Ys1KR/JthpsaGj80DVgxWfH9TE5AWSqsU+E4JQnm2lNL++I4Djm
        olHSWPsSg//kAXwXlWBJWILQWQHWE4tQj8pgXFaR0oVryUvC8+l9mPoHIayQ4uGjocKz0vJTB2Er3YPP
        A11IsUkorZVQRytISV4fwrEnfJSpSsELht6g+kw9mpqVHEBGCyNZKNK6OCSFInyYlMCyH7v37cIrnyub
        6WF6IaLlaNfpiyAZZQCNAxQn7A1s7SCn1rZbkFadhrLlMkZtDo65nFghgFzY6XX+dRCvy3AP9CkFAUkq
        5aBlCqg1WvgDQdQxFAk7xrnwIrk9XnT3MOnPpUSVvAYdnXcQno4QgNO9fTKP9wd2gozvidL48AAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="toolStripButton_merge.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAI9JREFUOE+9UoEJgDAM2wme4kWbsO0vP9IPPEE/0Ha0WIbFKtNAMK5NXIuuOXLO
        O7LWZnwSkFLqS9ECGRBjXPhdYzFJwOGEBfjqgAS9cvMVyXaCTLv3fkMdQuiopKNOfcI2ARp4HCDuAaYx
        jCMBATMG8C7gOeJuKPT+BrIJzdIoaypkE2sIevdTSW3GDwHOHXnx5P6W05S+AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="textBox_instructions.Text" xml:space="preserve">
    <value>This tool allows you to select multiple security roles and merge them into a newly created or existing role.

Follow the steps below to easily merge security roles:

1) Click 'Get Roles' to get a list of roles from Dynamics 365.
2) Check the box next to each role you want to merge.
3) Enter a unique name for the new security role which the others will be merged into or select an existing Role to merge into.
4) Click 'Merge' to merge the roles into one.</value>
  </data>
</root>