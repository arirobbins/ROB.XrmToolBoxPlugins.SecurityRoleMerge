<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfiBgUTIB8pKiHFAAAAB3RFWHRBdXRob3IAqa7M
        SAAAAAx0RVh0RGVzY3JpcHRpb24AEwkhIwAAAAp0RVh0Q29weXJpZ2h0AKwPzDoAAAAJdEVYdFNvZnR3
        YXJlAF1w/zoAAAAHdEVYdFNvdXJjZQD1/4PrAAAACHRFWHRDb21tZW50APbMlr8AAAAGdEVYdFRpdGxl
        AKju0icAAAMFSURBVDhPXVJ/LNRhGP8iXz867pyTM3cuvzmOKDQhba6ZpRkjv006qa2oxNRQlIwoKpYy
        U63+kNY/LUNJUzaqVX7O6v5QKlYt2klpfXq+p7udnu3zfb7v53mez/M+7/syALQgM87z9k4nz9Nx/yNH
        Lk+huJ0ht/JhGPZGjqrza9s11CUk9NJaZJjE4Vxc3MUP9Y1oSkl9RvH1Op4z0/Y9uXd/trZjseY8frS0
        oS5p12Pi9Z0a4uNbZ2vPQXOoGIsnq1CfmPSSZVmtCFOqVDb8udWBhfLTmC0pw3xZJTSXLqMiNrabRKQ1
        cXG1H2vqMX/wKGayVJhLzsSvymoUbd02zDVh0hSK5L6S40vLjc2YO3oMnw4XY764FNNVtWhIT1ePlldg
        4WAhZjJz8D4pHQvZeejbrUKIRDJEAt7aLYY7OuY+LCpZXqYRZg8cwcf9BfhcUAQNzfwlnzqnZuPdzkR8
        S8pAb2Y23EUirruSYKw/pAixWNVVUKj5XnEGn/blYyYtG9OR0VDLN2LSQYY3EjfcDAmFjG89SIXRujq9
        AAc3K8uU/sKin3NbojDJs8UEY4ZRxhhTa9aiIzAYApZ9QMVhhjWrBI4EBVUPhUf9fmtiiXHG9J+AOUZI
        oNvFAzFi8RMSsDGs0f+UBYc0vY5QQm1ujRGGJQFzqFkBxsgPk9igkSl6JDJkSmXcO9FfsfZT6h/QMhYa
        iQkzHoZoy8OMCSZEEjyN3I5JR1daG6OXuPvkH0nWQyVx6teJMFkeHqeeh4RheA2LHtLrIrzi2eCqYgMU
        69a9uBCwSTNlLwUNj04S6CTfL3NFitSJOw8hs8PZeX+Hjz8GzSxwh4IDFmvR4uIOKY83QAmbvYTCjGYf
        v6URWzHuUbzXzBw3PeXwE9iMUdxXO4JCJCq/TuS4vQPa3DzhaMXj3rtSN6evULj3itz3l1rqgtvevnDm
        87niBIKpNoFDuIPDibMbAuHF53MvTH/POgQLBLk1G4OWAuzsximeSDDh+FVJZMmEKEPOEGSxhBiC0QoH
        5i8eGwhCPSze0AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="toolStripButton_getRoles.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAI9SURBVDhPlZLdS5NhGMb3LwSdBUEHge2sDjr0IBrVQU58
        9/Hqms3yowylNom1aka6hobNbC+IbYmupIhGptvMrX2vqBShOdMtlynOMKIgDWGvu9qeuY3XFeQFNzzc
        13P97oebh/cvdRoYbB13prlPcXiDbzFsd2HHEIfTS0LtHQYwvSaY+i2oO9/0f5Cnz+24ekMHsUSKE2UU
        Wq5oQUnoojA73IePQj63P+4OQHtTj/qGc3lje3hxNQ42aMPCJQrxl9aCNxuLQ3/7LsTS4mk5pTZ+QzMi
        R2xiDKvTk9x7Lk8IF5pVMJsfEAPfviI16ctfSv36ic3ZKWgd1QTyYX6CC7A8tkJMyxCZmSEGO6hHklGD
        NV7DZmIB7Asz1t97CeDZkhG1TDneRUIFSDdzH+WUJN/wHN2LNSkfybYabGho/NA1YMVnx/UxOQFkqrFP
        hOCUJ5tpTS/viOA45qJR0lj7EoP/5AF8F5VgSViC0FkB1hOLUI/KYFxWkdKFa8lLwvPpfZj6ByGskOLh
        o6HCs9LyUwdhK92DzwNdSLFJKK2VUEcrSEleH8KxJ3yUqUrBC4beoPpMPZqalRxARgsjWSjSujgkhSJ8
        mJTAsh+79+3CK58rm+lheiGi5WjX6YsgGWUAjQMUJ+wNbO0gp9a2W5BWnYay5TJGbQ6OuZxYIYBc2Ol1
        /nUQr8twD/QpBQFJKuWgZQqoNVr4A0HUMRQJO8a58CK5PV509zDpz6VElbwGHZ13EJ6OEIDTvX0yj/cH
        doKM74nS+PAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="toolStripButton_merge.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACPSURBVDhPvVKBDYAgDOMET/EjJMBffqQfeIJ+oBvZ4kJc
        nAZt0ljZWtmia46c846stRmfBKSU+lK0QAbEGBd+11hMEnA4YQG+OiBBr9x8RbKdINMeQthQe+87Kumo
        U5+wTYAGHgeIe4BpDONIQMCMAbwLeI64Gwq9v4FsQrM0ypoK2cQagt79VFKb8UOAcweb1eUQUyWsIwAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="textBox_instructions.Text" xml:space="preserve">
    <value>This tool allows you to select multiple security roles and merge them into a newly created role.

Follow the steps below to easily merge security roles:

1) Click 'Get Roles' to get a list of roles from Dynamics 365.
2) Check the box next to each role you want to merge.
3) Enter a unique name for the new security role which the others will be merged into.
4) Click 'Merge' to merge the roles into one.</value>
  </data>
</root>